name: Deployment To Azure

on:
  pull_request:
    types:
      - closed

env:
  REACT_APP_API_DOMAIN: /api
  AZURE_SSH_KEY: ${{ secrets.AZURE_SSH_KEY }}
  AZURE_USERNAME: azureuser
  AZURE_VM_IP: 51.107.12.46

jobs:
  deploy:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'development'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code from "development" branch
        uses: actions/checkout@v4
        with:
          ref: development # Specify the branch name to check out

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm install --force
        working-directory: frontend

      - name: Build project
        run: |
          npm run build:github
          # Remove existing files in the backend's static folder
          rm -rf ../backend/src/main/resources/static/*
          # Copy new build files to the backend's static folder
          cp -r build/* ../backend/src/main/resources/static/
        working-directory: ${{ github.workspace }}/frontend

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Compiling Backend (Packaging)
        run: |
          mvn clean
          mvn package -DskipTests
        working-directory: ${{ github.workspace }}/backend
      - name: SSH into Azure VM and Deploy
        run: |
          echo "$AZURE_SSH_KEY" > azure_key.pem
          chmod 400 azure_key.pem

          # Kill the process running on port 8080 (if any)
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
          -i azure_key.pem \
          ${{ env.AZURE_USERNAME }}@${{ env.AZURE_VM_IP }} "if sudo lsof -t -i :8080; then sudo kill -9 \$(sudo lsof -t -i :8080); fi"

          # Remove existing JAR file (if it exists)
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
          -i azure_key.pem \
          ${{ env.AZURE_USERNAME }}@${{ env.AZURE_VM_IP }} "rm -f ~/backend-0.0.1-SNAPSHOT.jar"

          # Copy the new JAR file to the Azure VM
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
          -i azure_key.pem \
          target/backend-0.0.1-SNAPSHOT.jar \
          ${{ env.AZURE_USERNAME }}@${{ env.AZURE_VM_IP }}:~/backend-0.0.1-SNAPSHOT.jar

          # Start the new JAR file inside a tmux session
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
          -i azure_key.pem \
          ${{ env.AZURE_USERNAME }}@${{ env.AZURE_VM_IP }} \
          tmux new-session -d -s backend-session 'sudo java -jar -Dspring.profiles.active=test ~/backend-0.0.1-SNAPSHOT.jar > output.log 2>&1 &'
        working-directory: ${{ github.workspace }}/backend


